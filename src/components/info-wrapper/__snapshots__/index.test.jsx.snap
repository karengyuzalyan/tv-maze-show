// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/info-wrapper/index.jsx <InfoWrapper /> should render and match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InfoWrapper
    info={
      Array [
        Object {
          "data": "test data",
          "name": "test",
        },
      ]
    }
    title="test title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="show-title-color size-24"
        >
          test title
        </span>,
        Array [
          <div>
            <span
              className="additional-info-data"
            >
              <b>
                test
                 
              </b>
              : 
              test data
            </span>
          </div>,
        ],
      ],
      "className": "additional-info d-flex f-column",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test title",
          "className": "show-title-color size-24",
        },
        "ref": null,
        "rendered": "test title",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": "test",
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="additional-info-data"
          >
            <b>
              test
               
            </b>
            : 
            test data
          </span>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <b>
                test
                 
              </b>,
              ": ",
              "test data",
            ],
            "className": "additional-info-data",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "test",
                  " ",
                ],
              },
              "ref": null,
              "rendered": Array [
                "test",
                " ",
              ],
              "type": "b",
            },
            ": ",
            "test data",
          ],
          "type": "span",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="show-title-color size-24"
          >
            test title
          </span>,
          Array [
            <div>
              <span
                className="additional-info-data"
              >
                <b>
                  test
                   
                </b>
                : 
                test data
              </span>
            </div>,
          ],
        ],
        "className": "additional-info d-flex f-column",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test title",
            "className": "show-title-color size-24",
          },
          "ref": null,
          "rendered": "test title",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": "test",
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="additional-info-data"
            >
              <b>
                test
                 
              </b>
              : 
              test data
            </span>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  test
                   
                </b>,
                ": ",
                "test data",
              ],
              "className": "additional-info-data",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "test",
                    " ",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "test",
                  " ",
                ],
                "type": "b",
              },
              ": ",
              "test data",
            ],
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
